R的核心概念{
    对象{
        1 R语言是一种面向对象的语言，所有的对象都有两个内在属性：元素类型和长度
            1.1 元素类型是对象内元素的基本类型包括数值（numeric），字符型（character），复数性（complex），逻辑型（logical），函数（function）等，通过mode()函数可以查看一个对象的类型
            1.2 长度是对象中元素的数目，通过函数length（）可以查看对象的长度
        2 处理元素类型外，对象本身也有不同的“类型”，表示不同的数据结构（struct）。R中的对象类型主要包括：
            向量（vecotr）：由一系列有序元素构成。
            因子（factor）：对同长的其他向量元素进行分类（分组）的向量对象。R同时提供有序（ordered）和无序（unordered）因子
            数组（array）：带有多个下标的类型相同的元素集合
            矩阵（matrix）：矩阵仅仅是一个双下标的数组，R提供了函数专门处理二维数组（矩阵）
            数据框（data frame）：和矩阵类似的一种结构，在数据框中，列可以是不同的对象。
            时间序列（time series）：包含一些额外的属性，如频率和时间。
            列表（list):是一种泛化（general form）的向量。它没有要求所有元素是同一类型，许多时候就是向量和列表类型，列表为统计计算的结果返回提供了一种便利的方法。
    }
    常量{
        NA：表示不可用
        Inf：无穷
        -Inf：负无穷
        TRUE：真
        FALSE：假
    }
    命令{
        R是一种语法非常简单的表达式语言（expression language）。使用者通过命令（command）与R进行交互
        基本命令要么是表达式（expressions）要么就是赋值（assignments).如果一条命令是表达式，那么它就会被解析（evaluate），将结果显示在屏幕上，同时清空该命令所占内存
        赋值同样会解析表达式并且把值传给变量但结果不会自动显示在屏幕上
    }
    工作空间{
        每次与R的会话（session）可以从一个全新的环境开始，也可以在原来的基础上继续，这些运行信息就保存在工作空间中。
        如果是UNIX系统以命令行的方式启动R，则当前目录就是本次会话的工作空间。
        工作空间保存了两个隐藏文件：
            .RData以二进制的方式保存了会话中的变量值
            .Rhistory以文本文件的方式保存了会话中的所有命令
        如果在一个已有的工作空间中启动R，会提示：原来保存的工作空间已还原。
            ls():看之前保存的数据
            history():之前保存的命令
            rm()/remove（）可以删除工作空间中的变量
            getwd()和setwd()来获取/设置工作空间目录
            list.files()查看当前目录下的文件
    }
    脚本/批处理{
        自己的脚本会以".R"作为扩展名。比如test.R
        使用命令source('test.R'),会批量执行脚本中的命令
        使用命令source('test.R', echo=TRUE)可以让脚本执行时输出更详细的信息
        sink("record.list")会把所有后续的输出结果从控制台定向到外部文件record.list中，此时控制台看不到命令输出的结果
        sink()可以让输出流重定向到控制台
    }
    帮助系统{
        文档与搜索：help.start()
        演示：demo()会按照包分组，列出所有可用的演示
        demo(is.things):按照名称可以开始演示
        知道函数名solve，需要了解其所属的包，用途、用法、参数说明、返回值、参考文献、相关函数以及范例等。可以使用help(solve)或?solve
        想看函数的执行示例：example(solve)
        关键字和运算符，核函数帮助类似但是需加上引号{
            ?'[['   #等价于help('[[')
            ?'+'    #等价于help('+')
            ?'if'   #等价于help('if')            
        }
        如果不知道函数名称还可以进行搜索如：??'analysis' #等价于search('analysis')
        官方搜索前面的帮助都受限与本地环境已经安装的包。如果要搜素R中所有的资源（包，函数、数学方法等），需要在R的官方网站搜索：http://www.r-project.org/search.html
    }
    学习资料{
        R官方网站：https://www.r-project.org/
        官网上的一些手册和文档：http://cran.r-project.org/manuals.html
        华盛顿大学的一个R教程：http://staff.washington.edu/tlumley/Rcourse/
    }

}